@use '../scss/reset';
@use '../scss/mixins' as *;

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');

:root {
  --red: #ff6b4a;
  --orange: #ffa132;
  --yellow: #f7ec61;
  --green: #46cc60;
  --blue: #66beec;
  --white: #f5f5f6;
  --black: #616161;
  --gray: #bdbdbd;

  --firstAlternativeColor: #bdb40d;
  --secondAlternativeColor: #f98072;
  --thirdAlternativeColor: #c559f4;

  --tracking: #f5f5f6;
  --backdrop: #f5f5f6;

  --text: #000;
  --background: #fff;
}

body:not(.dark) {
  .h,
  .pi,
  .algorithm-l,
  .t,
  .algorithm-u {
    --white: var(--gray);
  }
}

body.dark {
  --red: #ff6b4a;
  --orange: #ffa132;
  --yellow: #f7ec61;
  --green: #46cc60;
  --blue: #66beec;
  --white: #f5f5f6;
  --black: #181818;
  --gray: #414141;

  --tracking: #505050;
  --backdrop: #1f1f1f;

  --text: rgb(255, 255, 255);
  --background: rgb(38, 38, 38);
}

body {
  background-color: var(--background);
  font-family: 'Inter', sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  color: var(--text);

  &.dark {
    a {
      filter: saturate(120%);
    }
  }

  a {
    color: var(--red);
    font-weight: 550 !important;
    transition: color 0.15s ease;
    filter: saturate(120%) brightness(90%);

    &:hover,
    &:active,
    &:focus-visible {
      color: var(--text);
    }

    &[href^='#'] {
      border-bottom: 2px dashed var(--red);
      transition: color 0.15s ease, border 0.15s ease;

      &:hover,
      &:active,
      &:focus-visible {
        color: var(--text);
        border-bottom: 1px dashed transparent;
      }
    }
  }
}

h1 {
  font-weight: 650;
  font-size: 1.8rem;
}

h3 {
  font-size: 1.4rem;
}

h4,
.h4 {
  font-size: 1.15rem;
  line-height: 1.4;
  font-weight: 550;
}

b {
  font-weight: 550;
}

br {
  content: '';
  margin: 2em;
  display: block;
  font-size: 24%;
}

header {
  padding: 2rem;

  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  z-index: 10;

  .logo {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 550;
    color: var(--text);

    .cube-svg.small {
      width: 3rem;
      filter: saturate(120%) !important;
      @include simpleCubeColor(var(--blue), var(--red), var(--white));
    }
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 1.35rem;

    font-weight: 450;

    a {
      color: var(--text);
    }

    a:hover,
    a:active,
    a:focus-visible {
      opacity: 0.6;
    }
  }

  a {
    transition: opacity 0.25s ease;
    border-bottom: none;
    white-space: nowrap;
  }
}

main:not(.home) {
  display: grid;

  [id] {
    max-width: 100vw;
    padding-top: 3.5rem;
  }

  p {
    line-height: 1.6;
    margin-top: 0.5rem;
  }

  h4 {
    margin-top: 0.75rem;
    margin-bottom: 0.5rem;
  }

  h5 {
    font-size: 1.15rem;
    line-height: 1.4;
    font-weight: 550;
  }

  .illustration + p {
    margin-top: 1.75rem;
  }
}

.f2l,
.white-cross,
.oll,
.pll {
  margin-bottom: 4.5rem;
}

.intro {
  .title {
    position: relative;

    gap: 0.25em;
    font-size: 1.75rem;
    line-height: 1.75;

    p {
      display: inline;
      color: var(--text);
      opacity: 0.35;
      padding-left: 0.25rem;
    }

    &::after {
      position: absolute;
      background-color: var(--red);
      border-radius: 100%;

      display: grid;
      place-content: center;
      color: var(--white);

      filter: saturate(120%);
      font-size: 1.5rem;

      top: 0.3rem;
      right: 0;

      width: 1.5em;
      height: 1.5em;
    }
  }
}

.algorithm {
  margin-top: 2rem;

  .case {
    display: flex;
    align-items: center;
    gap: 0.75rem;

    .cube-svg {
      width: 8rem;
    }

    p {
      line-height: 1.3;
      padding-bottom: 1.5rem;
    }

    @media screen and (min-width: 33rem) {
      margin-bottom: -5rem;

      .cube-svg {
        width: 10rem;
      }
    }
  }
}

.steps {
  .question {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

.columns {
  display: grid;
  grid-template-columns: 100%;
  gap: 2rem;
  align-items: center;

  @media screen and (min-width: 50rem) {
    display: grid;
    align-items: center;
    grid-template-columns: calc(50% - 1rem) calc(50% - 1rem);
    gap: 3rem;
  }
}

.side-margins {
  padding-left: 8vw;
  padding-right: 8vw;

  @media screen and (min-width: 33rem) {
    padding-left: 15vw;
    padding-right: 15vw;
  }

  @media screen and (min-width: 75rem) {
    padding-left: 20vw;
    padding-right: 20vw;
  }

  @media screen and (min-width: 85rem) {
    padding-left: 25vw;
    padding-right: 25vw;
  }

  @media screen and (min-width: 100rem) {
    padding-left: 28vw;
    padding-right: 28vw;
  }

  @media screen and (min-width: 180rem) {
    padding-left: 40vw;
    padding-right: 40vw;
  }
}

.track-pieces-button {
  position: fixed;
  bottom: 1.25rem;
  right: 1.25rem;

  z-index: 15;

  border: none;
  background: var(--backdrop);
  background: transparent;
  color: var(--text);
  padding: 0.5rem;
  border-radius: 0.3rem;

  font-size: 0.9rem;
  font-weight: 450;

  filter: saturate(120%);
  transform: scale(0.9);

  display: grid;
  gap: 0.5rem;

  .cube-svg.small {
    width: 4rem;
  }

  .tooltip {
    height: 50%;

    position: absolute;
    left: 2.5rem;
    top: 1.15rem;

    box-shadow: rgba(0, 0, 0, 0.1) 0px 10px 15px -3px,
      rgba(0, 0, 0, 0.05) 0px 4px 6px -2px;

    transform: translateX(-100%);
    transition: all 0.25s ease;

    display: flex;
    align-items: center;

    width: 0;
    color: transparent;

    overflow: hidden;
    white-space: nowrap;

    z-index: -1;

    p {
      margin-left: 0.75rem;
    }

    &::before {
      content: '';
      position: absolute;
      transition: all 0.25s ease;

      border-radius: 0.5rem 0 0 0.5rem;
      background-color: transparent;
      height: 100%;

      z-index: -2;
    }
  }

  &:hover {
    .tooltip {
      width: 12.5rem;
      color: var(--text);

      &::before {
        background-color: var(--background);
        width: 100%;
      }
    }
  }
}

.toggle {
  position: relative;
  border-radius: 0.5rem;
  overflow: hidden;

  transition: all 0.2s ease;

  display: flex;
  align-items: center;
  text-align: center;

  filter: saturate(120%);
  background: var(--backdrop);
  font-size: 0.9rem;

  label {
    cursor: pointer;
    border-radius: 0.5rem;
    width: 3.5rem;

    color: rgba(var(--text), 0.5);
    line-height: 2rem;

    transition: all 0.2s ease;
  }

  input[type='radio'] {
    display: none;
  }

  &.on-false {
    label[for='no'] {
      color: var(--text);
      background-color: var(--red);
    }

    label[for='light'] {
      color: var(--text);
      background-color: var(--red);
    }
  }

  &.on-true {
    label[for='yes'] {
      color: var(--text);
      background-color: var(--blue);
    }

    label[for='dark'] {
      color: var(--text);
      background-color: var(--blue);
    }
  }
}
